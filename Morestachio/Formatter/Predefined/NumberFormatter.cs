//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Morestachio.Attributes;
using Morestachio.Formatter.Framework;

namespace Morestachio.Formatter.Predefined
{
	public static partial class NumberFormatterEx
	{
	 
		[MorestachioFormatter("Add", "Adds two numbers")]
		public static int Add([SourceObject]Int16 left, Int16 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static int Substract([SourceObject]Int16 left, Int16 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static int Divide([SourceObject]Int16 left, Int16 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int16 left, Int16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int16 left, Int16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int16 left, Int16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int16 left, Int16 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static int Add([SourceObject]Int16 left, Int32 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static int Substract([SourceObject]Int16 left, Int32 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static int Divide([SourceObject]Int16 left, Int32 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int16 left, Int32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int16 left, Int32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int16 left, Int32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int16 left, Int32 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int64 Add([SourceObject]Int16 left, Int64 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int64 Substract([SourceObject]Int16 left, Int64 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int64 Divide([SourceObject]Int16 left, Int64 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int16 left, Int64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int16 left, Int64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int16 left, Int64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int16 left, Int64 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Int16 left, Decimal right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Int16 left, Decimal right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Int16 left, Decimal right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int16 left, Decimal right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int16 left, Decimal right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int16 left, Decimal right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int16 left, Decimal right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Int16 left, Double right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Int16 left, Double right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Int16 left, Double right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int16 left, Double right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int16 left, Double right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int16 left, Double right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int16 left, Double right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int32 Add([SourceObject]Int32 left, Int16 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int32 Substract([SourceObject]Int32 left, Int16 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int32 Divide([SourceObject]Int32 left, Int16 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int32 left, Int16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int32 left, Int16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int32 left, Int16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int32 left, Int16 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int32 Add([SourceObject]Int32 left, Int32 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int32 Substract([SourceObject]Int32 left, Int32 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int32 Divide([SourceObject]Int32 left, Int32 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int32 left, Int32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int32 left, Int32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int32 left, Int32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int32 left, Int32 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int64 Add([SourceObject]Int32 left, Int64 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int64 Substract([SourceObject]Int32 left, Int64 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int64 Divide([SourceObject]Int32 left, Int64 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int32 left, Int64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int32 left, Int64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int32 left, Int64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int32 left, Int64 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Int32 left, Decimal right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Int32 left, Decimal right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Int32 left, Decimal right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int32 left, Decimal right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int32 left, Decimal right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int32 left, Decimal right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int32 left, Decimal right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Int32 left, Double right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Int32 left, Double right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Int32 left, Double right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int32 left, Double right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int32 left, Double right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int32 left, Double right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int32 left, Double right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int64 Add([SourceObject]Int64 left, Int16 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int64 Substract([SourceObject]Int64 left, Int16 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int64 Divide([SourceObject]Int64 left, Int16 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int64 left, Int16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int64 left, Int16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int64 left, Int16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int64 left, Int16 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int64 Add([SourceObject]Int64 left, Int32 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int64 Substract([SourceObject]Int64 left, Int32 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int64 Divide([SourceObject]Int64 left, Int32 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int64 left, Int32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int64 left, Int32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int64 left, Int32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int64 left, Int32 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Int64 Add([SourceObject]Int64 left, Int64 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Int64 Substract([SourceObject]Int64 left, Int64 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Int64 Divide([SourceObject]Int64 left, Int64 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int64 left, Int64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int64 left, Int64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int64 left, Int64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int64 left, Int64 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Int64 left, Decimal right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Int64 left, Decimal right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Int64 left, Decimal right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int64 left, Decimal right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int64 left, Decimal right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int64 left, Decimal right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int64 left, Decimal right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Int64 left, Double right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Int64 left, Double right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Int64 left, Double right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Int64 left, Double right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Int64 left, Double right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Int64 left, Double right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Int64 left, Double right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Decimal left, Decimal right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Decimal left, Decimal right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Decimal left, Decimal right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Decimal left, Decimal right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Decimal left, Decimal right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Decimal left, Decimal right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Decimal left, Decimal right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Decimal left, Int16 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Decimal left, Int16 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Decimal left, Int16 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Decimal left, Int16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Decimal left, Int16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Decimal left, Int16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Decimal left, Int16 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Decimal left, Int32 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Decimal left, Int32 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Decimal left, Int32 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Decimal left, Int32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Decimal left, Int32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Decimal left, Int32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Decimal left, Int32 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Decimal Add([SourceObject]Decimal left, Int64 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Decimal Substract([SourceObject]Decimal left, Int64 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Decimal Divide([SourceObject]Decimal left, Int64 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Decimal left, Int64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Decimal left, Int64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Decimal left, Int64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Decimal left, Int64 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Double left, Double right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Double left, Double right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Double left, Double right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Double left, Double right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Double left, Double right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Double left, Double right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Double left, Double right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Double left, Int16 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Double left, Int16 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Double left, Int16 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Double left, Int16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Double left, Int16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Double left, Int16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Double left, Int16 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Double left, Int32 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Double left, Int32 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Double left, Int32 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Double left, Int32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Double left, Int32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Double left, Int32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Double left, Int32 right) {
			return left <= right;
		}

		[MorestachioFormatter("Add", "Adds two numbers")]
		public static Double Add([SourceObject]Double left, Int64 right) {
			return left + right;
		}

		[MorestachioFormatter("Substract", "Substracts the other number from the current number")]
		public static Double Substract([SourceObject]Double left, Int64 right) {
			return left - right;
		}

		[MorestachioFormatter("Divide", "Devides the other number from the current number")]
		public static Double Divide([SourceObject]Double left, Int64 right) {
			return left / right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]Double left, Int64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]Double left, Int64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]Double left, Int64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]Double left, Int64 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt16 left, UInt16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt16 left, UInt16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt16 left, UInt16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt16 left, UInt16 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt16 left, UInt32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt16 left, UInt32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt16 left, UInt32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt16 left, UInt32 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt16 left, UInt64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt16 left, UInt64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt16 left, UInt64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt16 left, UInt64 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt32 left, UInt16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt32 left, UInt16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt32 left, UInt16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt32 left, UInt16 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt32 left, UInt32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt32 left, UInt32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt32 left, UInt32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt32 left, UInt32 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt32 left, UInt64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt32 left, UInt64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt32 left, UInt64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt32 left, UInt64 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt64 left, UInt16 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt64 left, UInt16 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt64 left, UInt16 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt64 left, UInt16 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt64 left, UInt32 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt64 left, UInt32 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt64 left, UInt32 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt64 left, UInt32 right) {
			return left <= right;
		}

		[MorestachioFormatter("BiggerAs", "Returns if ether the value is bigger as the other")]
		public static Boolean BiggerAs([SourceObject]UInt64 left, UInt64 right) {
			return left > right;
		}

		[MorestachioFormatter("SmallerAs", "Returns if ether the value is smaller as the other")]
		public static Boolean SmallerAs([SourceObject]UInt64 left, UInt64 right) {
			return left < right;
		}

		[MorestachioFormatter("BiggerOrEqualAs", "Returns if ether the value is bigger or equal as the other")]
		public static Boolean BiggerOrEqualAs([SourceObject]UInt64 left, UInt64 right) {
			return left >= right;
		}

		[MorestachioFormatter("SmallerOrEqualAs", "Returns if ether the value is smaller or equal as the other")]
		public static Boolean SmallerOrEqualAs([SourceObject]UInt64 left, UInt64 right) {
			return left <= right;
		}
 
	}
}
