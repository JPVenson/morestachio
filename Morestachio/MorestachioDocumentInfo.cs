using System.Threading;
using Morestachio.Document;
using Morestachio.Document.Contracts;
using Morestachio.Document.Items;
using Morestachio.Fluent;
using Morestachio.Helper;
using Morestachio.Parsing.ParserErrors;
using Morestachio.Profiler;
using Morestachio.Rendering;

namespace Morestachio;

/// <summary>
///     Provided when parsing a template and getting information about the embedded variables.
/// </summary>
public class MorestachioDocumentInfo
{
	/// <summary>
	/// Initializes a new instance of the <see cref="MorestachioDocumentInfo"/> class.
	/// </summary>
	/// <param name="options">The options.</param>
	/// <param name="document">The document.</param>
	public MorestachioDocumentInfo(ParserOptions options, IDocumentItem document)
		: this(options, document ?? throw new ArgumentNullException(nameof(document)), null)
	{
	}

	internal MorestachioDocumentInfo(ParserOptions options,
									IDocumentItem document,
									IEnumerable<IMorestachioError> errors)
	{
		ParserOptions = options ?? throw new ArgumentNullException(nameof(options));
		Document = document;
		Errors = errors ?? Enumerable.Empty<IMorestachioError>();
	}

	/// <summary>
	///		If enabled will output all variables set in the template in the <see cref="MorestachioDocumentResult.CapturedVariables"/>
	/// </summary>
	public bool CaptureVariables { get; set; }

	/// <summary>
	///		The Morestachio Document generated by the <see cref="Parser"/>
	/// </summary>
	public IDocumentItem Document { get; }

	/// <summary>
	///     The parser Options object that was used to create the Template Delegate
	/// </summary>
	public ParserOptions ParserOptions { get; }

	/// <summary>
	///		Gets a list of errors occured while parsing the Template
	/// </summary>
	public IEnumerable<IMorestachioError> Errors { get; }

	internal const int BufferSize = 2024;

	/// <summary>
	///		Creates an Fluent api wrapper for the current Document
	/// </summary>
	/// <returns></returns>
	public MorestachioDocumentFluentApi Fluent()
	{
		if (Errors.Any())
		{
			throw new AggregateException(
				"You cannot access this Template as there are one or more Errors. See Inner Exception for more infos.",
				Errors.Select(e => e.GetException())).Flatten();
		}

		return new MorestachioDocumentFluentApi(this);
	}

	/// <summary>
	///		Creates a new Build-In renderer
	/// </summary>
	/// <returns></returns>
	public virtual IRenderer CreateRenderer()
	{
		if (Errors.Any())
		{
			throw new AggregateException(
				"You cannot Render this Template as there are one or more Errors. See Inner Exception for more infos.",
				Errors.Select(e => e.GetException())).Flatten();
		}

		return new Renderer(Document, ParserOptions, CaptureVariables);
	}

	/// <summary>
	///		Creates a new Build-In renderer
	/// </summary>
	/// <returns></returns>
	public virtual IRenderer CreateCompiledRenderer(IDocumentCompiler compiler = null)
	{
		if (Errors.Any())
		{
			throw new AggregateException(
				"You cannot Render this Template as there are one or more Errors. See Inner Exception for more infos.",
				Errors.Select(e => e.GetException())).Flatten();
		}

		return new CompiledRenderer(Document, ParserOptions, CaptureVariables, compiler ?? new DocumentCompiler());
	}

	[Obsolete("Please use the CreateCompiledRenderer method", true)]
#pragma warning disable CS1591
	public CompilationResult Compile()

	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().RenderAsync method", true)]
	public MorestachioDocumentResultPromise CreateAsync(object data, CancellationToken token)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().RenderAsync method", true)]
	public MorestachioDocumentResultPromise CreateAsync(object data)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().RenderAndStringifyAsync method", true)]
	public StringPromise CreateAndStringifyAsync(object source)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().RenderAndStringifyAsync method", true)]
	public StringPromise CreateAndStringifyAsync(object source, CancellationToken token)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().Render method", true)]
	public MorestachioDocumentResult Create(object source, CancellationToken token)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().Render method", true)]
	public MorestachioDocumentResult Create(object source)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().RenderAndStringify method", true)]
	public string CreateAndStringify(object source)
	{
		throw new NotImplementedException();
	}

	[Obsolete("Please use the CreateRenderer().RenderAndStringify method", true)]
	public string CreateAndStringify(object source, CancellationToken token)
	{
		throw new NotImplementedException();
	}
#pragma warning restore CS1591
}